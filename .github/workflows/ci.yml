name: Flask CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install requirements
      run: |
        pip install -r app/requirements.txt
        pip install pytest pytest-cov
        pip install pylint

    - name: Check database
      run: python check_db.py

    - name: Run Pylint
      run: |
        pylint app/ tests/ *.py --exit-zero

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml
        
    - name: Clear Sonar Cache
      run: rm -rf ~/.sonar/cache

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=tassnimelleuch_DevOps-Internship
          -Dsonar.organization=tassnimelleuch
          -Dsonar.branch.name=main
          -Dsonar.sources=app  
          -Dsonar.tests=tests
          -Dsonar.coverage.exclusions=tests/**,**/__init__.py

    - name: Start Flask
      run: |
        python app.py &
        sleep 5
        curl -f http://localhost:5000 || echo "App started but no route at /"

    # DOCKER STEPS
    - name: Login to Docker Hub  
      uses: docker/login-action@v3  
      with:  
        username: ${{ secrets.DOCKER_HUB_USERNAME }}  
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build Docker image  
      run: docker build -t tasnimelleuchenis/my-final-flaskapp:latest -f dockerfile .

    - name: Tag Docker image  
      run: docker tag tasnimelleuchenis/my-final-flaskapp:latest tasnimelleuchenis/my-final-flaskapp:${{ github.sha }}

    - name: Push Docker images  
      run: |  
        docker push tasnimelleuchenis/my-final-flaskapp:latest  
        docker push tasnimelleuchenis/my-final-flaskapp:${{ github.sha }}